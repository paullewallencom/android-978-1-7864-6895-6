package com.androcid.zomato.dao;


import android.database.sqlite.SQLiteDatabase;

import com.androcid.zomato.dao.classes.PhotoItemDao;
import com.androcid.zomato.dao.classes.RestaurantImageDao;
import com.androcid.zomato.model.PhotoItem;
import com.androcid.zomato.model.RestaurantImage;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    //QUIZ ITEM
    private final DaoConfig restaurantImageDaoConfig;
    private final RestaurantImageDao restaurantImageDao;

    //QUIZ ITEM
    private final DaoConfig photoItemDaoConfig;
    private final PhotoItemDao photoItemDao;



    //TODO ADD HERE
    /*
    private final DaoConfig rssItemDaoConfig;
    private final DisplayItemDao displayItemDao;
    */

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        //MEMBERS ITEM
        restaurantImageDaoConfig = daoConfigMap.get(RestaurantImageDao.class).clone();
        restaurantImageDaoConfig.initIdentityScope(type);
        restaurantImageDao = new RestaurantImageDao(restaurantImageDaoConfig, this);
        registerDao(RestaurantImage.class, restaurantImageDao);

        //MEMBERS ITEM
        photoItemDaoConfig = daoConfigMap.get(PhotoItemDao.class).clone();
        photoItemDaoConfig.initIdentityScope(type);
        photoItemDao = new PhotoItemDao(photoItemDaoConfig, this);
        registerDao(PhotoItem.class, photoItemDao);

        //TODO ADD HERE
    }
    
    public void clear() {
        restaurantImageDaoConfig.getIdentityScope().clear();
    }


    public PhotoItemDao getPhotoItemDao() {
        return photoItemDao;
    }

    public RestaurantImageDao getRestaurantImageDao() {
        return restaurantImageDao;
    }
}
